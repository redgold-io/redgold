[package]
name = "redgold"
version = "0.1.0"
edition = "2021"
authors = ["Redgold"]
description = "A relative proof conflict resolution & irreversibility service with trust modeling custodial pooling and executor contracts"
documentation = "https://dev.docs.redgold.io/"
readme = "README.md"
homepage = "https://redgold.io"
repository = "https://github.com/redgold-io/redgold"
license = "MIT"
keywords = ["crypto", "cryptocurrency", "reputation", "decentralized", "p2p"]
categories = ["cryptography::cryptocurrencies"] # https://crates.io/category_slugs
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
#exclude = ["/.github", "bin", "vue-explorer"]



[workspace]
members = [
    "app",
    "core",
    "data",
    "schema",
#    "sdk",
    "executor"
]
exclude = ["examples/rust_wasm", "sdk", "sdk/*"]

[dependencies]
[target.'cfg(not(all(target_arch = "wasm32", target_os = "unknown")))'.dependencies]
redgold-data = { path = "data", version = "0.1.0"}
redgold-schema = { path = "schema", version = "0.1.0"}
#redgold-executor = { path = "executor", version = "0.1.0"}
tempfile = "3.3.0"
#web3 = { version = "0.18.0", default-features = false, features = ["http-rustls-tls"] }
sha3 = "0.10.8"
argon2 = "0.5.0"
filepath = "0.1.2"
svg = "0.10.0"
noise = "0.7.0"
bs58 = "0.4.0"
dirs = "4.0.0"
sqlx = { version = "0.5", features = [ "runtime-tokio-native-tls" , "postgres", "sqlite"] } # Tokio:
error-chain = "0.12.4"
backtrace = "0.3.65"
#btc-transaction-utils = "0.9.0" # build conflict, out of date anyways
# todo: add rust-bitcoin here. https://github.com/rust-bitcoin/rust-bitcoin not necessary til after cli
#swagger = "2.2" # breaks openssl?
flume = { version = "0.10.12", features = ["futures-core", "futures-sink", "default"] }
multihash = "*"
dotenv = "0.15.0"
futures = "0.3.1"
bitcoin-wallet = "1.1.0"
rust-crypto = "0.2.36"
prost = "0.8"
#hdpath = { version = "0.5.0", features = ["with-bitcoin"] }
dashmap = "4.0.2"
rusqlite = "0.25.3"
default-args = "1.0.0"
crossbeam-channel = "0.5.1"
crossbeam = "0.8.1"
uuid = { version = "0.8.2", features = ["serde", "v4"] }
eframe = "0.21.0" # Gives us egui, epi and web+native backends
egui_extras = {version = "0.21.0", features = ["default", "image"]}
strum = "0.21"
strum_macros = "0.21"
image = { version = "0.24.6", default-features = false, features = ["jpeg", "png"] }
zxcvbn = '2.1.1'
rand = '0.8.4'
clap = { version = "3.1.17", features = ["derive"] }
log = "0.4.14"
hex = "0.4.3"
void = "1.0.2"
async-std = { version = "1.6.2", features = ["attributes"] }
async-trait = "0.1.56"
env_logger = "0.9.0"
structopt = "0.3.21"
warp = {version = "0.3", features = ["tls", "default"]}
reqwest = { version = "0.11", features = ["json"] }
prost-helper = "0.5.0"
serde = "1.0.130"
serde_json = "1.0.59"
base64 = "0.13.0"
serde_with = { version = "1.10.0", features = ["hex"] }
log4rs = "1.0.0"
metrics = "0.18.1"
ssh2 = "0.9.1"
ndarray = "0.15.3"
chrono = "0.4.19"
config = "0.11.0"
bdk = "0.14.0"
miniscript = "6.0.1"
itertools = "0.10.1"
bytes = "1.1.0"
#bitcoin = {version = "0.29.1", features = ["serde", "bitcoinconsensus"]}
#Dependencies for email sending
aws-config = "0.55.1"
aws-sdk-sesv2 = "0.26.0"
#tracing-subscriber = "0.3.17"

#Dependencies for multiparty threshold ecdsa
multi-party-ecdsa = "0.8.1"
anyhow = "1"
round-based = { version = "0.1.4", features = [] }
async-sse = "5"
rocket = { version = "0.5.0-rc.1", default-features = false, features = ["json"] }
thiserror = "1.0.23"
surf = "2"
curv-kzen = { version = "0.9", default-features = false }

tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

metrics-exporter-prometheus = "0.9.0"
# conflict with multi-party-ecdsa
libp2p = "0.44.0"
tokio = { version = "1.0.0", features = ["io-util", "io-std", "macros", "rt", "rt-multi-thread", "full"] }
tokio-util = { version = "0.7.8", features = ["default", "net", "codec"] }
tokio-stream = "0.1.14"

[dependencies.bitcoin]
version = "0.21"
features = ["serde", "bitcoinconsensus"]

#[build-dependencies]
#sqlx = { version = "0.5", features = [ "runtime-tokio-native-tls" , "postgres", "sqlite"] } # Tokio:
#prost-build = "0.8"
#prost-serde = "0.2.0"
#serde = "1.0.130"
#serde_json = "1.0.59"
#tokio = { version = "1.0.0", features = ["io-util", "io-std", "macros", "rt", "rt-multi-thread", "full"] }
#rusqlite = "0.25.3"

[profile.dev.package.sqlx-macros]
opt-level = 3

# Only enable for debugging performance with heap dumps of remote cluster,
# Bloats the binary size a lot
#[profile.release]
#debug = true
