[package]
name = "redgold"
version = "0.1.22"
edition = "2021"
authors = ["Redgold"]
description = "p2p database / compute engine & portfolio target models"
documentation = "https://dev.docs.redgold.io/"
readme = "README.md"
homepage = "https://redgold.io"
repository = "https://github.com/redgold-io/redgold"
license = "MIT"
keywords = ["crypto", "cryptocurrency", "reputation", "decentralized", "p2p"]
categories = ["cryptography::cryptocurrencies"]


[workspace]
members = [
#    "app",
#    "core",
    "data",
    "schema",
    "sdk",
    "executor",
    "keys",
    "sdk-client"
]
exclude = ["examples/experiments/rust_wasm", "ai"] #, "sdk", "sdk/*"]


[workspace.package]
version = "0.1.5"
edition = "2021"
authors = ["Redgold"]
description = "A relative proof conflict resolution & irreversibility service with trust modeling custodial pooling and executor contracts"
documentation = "https://dev.docs.redgold.io/"
readme = "README.md"
homepage = "https://redgold.io"
repository = "https://github.com/redgold-io/redgold"
license = "MIT"
keywords = ["crypto", "cryptocurrency", "reputation", "decentralized", "p2p"]
categories = ["cryptography::cryptocurrencies"]


[workspace.dependencies]
redgold-schema = { path = "schema", version = "0.1.22"}
redgold-data = { path = "data", version = "0.1.22"}
redgold-keys = { path = "keys", version = "0.1.22"}
redgold-executor = { path = "executor", version = "0.1.22"}
redgold-sdk-client = { path = "sdk-client", version = "0.1.22"}
hex = "0.4.3"
serde = { version = "1.0.130", features = ["default", "derive"] }
serde_json = "1.0.59"
serde_with = { version = "3.2.0", features = ["hex"] }
itertools = "0.10.1"
log = "0.4.14"
metrics = "0.22.0"
dirs = "5.0.1"
sha3 = "0.10.8"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
rand = '0.8.4'
tokio = { version = "1.36.0", features = ["io-util", "io-std", "macros", "rt", "rt-multi-thread", "process"] }


[dependencies]
redgold-schema = {workspace = true}

sha3 = {workspace = true}
#redgold-sdk-client = {workspace = true}
tempfile = "3.3.0"
argon2 = "0.5.0"
dirs = "5.0.1"
#backtrace = "0.3.65"

flume = { version = "0.10.12", features = ["futures-core", "futures-sink", "default"] }
dotenv = "0.15.0"
futures = "0.3.1"
# Used for Sha256 but can be deprecated
rust-crypto = "0.2.36"
# only used in schema?

dashmap = "5.5.0"
# Deprecate after moving into data module -- only for build

crossbeam = "0.8.1"
uuid = { version = "1.3.3", features = ["serde", "v4", "v1"] }
# GUI Alone
eframe = "0.25.0" # Gives us egui, epi and web+native backends
egui_extras = {version = "0.25.0", features = ["default", "image", "all_loaders"]}
strum = "0.25"
strum_macros = "0.25"
image = { version = "0.24.6", default-features = false, features = ["jpeg", "png"] }
#zxcvbn = '2.1.1'
rand = { workspace = true}
clap = { version = "4.3.21", features = ["derive", "env"] }
log = "0.4.14"
hex = "0.4.3"
#void = "1.0.2"
# Is this used anymore?
#async-std = { version = "1.6.2", features = ["attributes"] }
async-trait = "0.1.56"
env_logger = "0.10.0"
#structopt = "0.3.21"
warp = {version = "0.3", features = ["tls", "default"]}
reqwest = { version = "0.11", features = ["json"] }
serde = "1.0.130"
serde_json = "1.0.59"
base64 = "0.21.2"
serde_with = { version = "3.2.0", features = ["hex"] }

# Observability
log4rs = "1.0.0"
metrics = { workspace = true }
metrics-exporter-prometheus = "0.13.0"
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Ops
#ssh2 = "0.9.2"

# Move to trust module
ndarray = "0.15.3"
chrono = "0.4.19"
config = "0.13.3"

#priority-queue = "1.2.0"

itertools = "0.10.1"
bytes = "1.1.0"

#Dependencies for multiparty threshold ecdsa
multi-party-ecdsa = "0.8.1"
anyhow = "1"
round-based = { version = "0.1.4", features = [] }
async-sse = "5"
rocket = { version = "0.5.0-rc.3", default-features = false, features = ["json"] }
thiserror = "1.0.23"
surf = "2"
curv-kzen = { version = "0.9", default-features = false }

# conflict with multi-party-ecdsa
tokio = { workspace = true }
tokio-util = { version = "0.7.8", features = ["default", "net", "codec"] }
tokio-stream = "0.1.14"

csv = "1.1"
rpassword = "7.2.0"

nix = { version = "0.26.4", features = ["user"] }
#[dependencies.nix]
#version = "0.24.3"
#features = ["user"]


# Webcam QR decoding
# https://github.com/sayanarijit/qrscan/blob/main/Cargo.toml
#opencv = "0.84.5"

#image = "0.24.6"
#clap = { version = "4.3.9", features = ["derive"] }
#anyhow = "1.0.71"
#
qrencode = "0.14.0"
rqrr = "0.6.0"
csscolorparser = "0.6.2"
#viuer = "0.6.2"
#nokhwa = { version = "0.10.4", features = ["input-native"] }
#uvc = "0.2.0"
#eye-hal = "0.1.0"

# Broken on mac CI builds, but works in local tests for QR image code captures.
# Re-enable later
#openpnp_capture = "0.2.4"
#openpnp_capture_sys = "0.4.0"

bdk = {package="bdk-debug", version = "0.28.1-debug", features = ["default", "keys-bip39", "bip39"]}


[dependencies.getrandom]
version = "0.2.12"
features = ["js"]

[build-dependencies]
pkg-config = "0.3.27"

[dev-dependencies]
assert_cmd = "2.0.11"
#cargo-audit = "0.17.6"


#[dependencies.bitcoin]
#version = "0.21"
#features = ["serde", "bitcoinconsensus"]

[profile.dev.package.sqlx-macros]
opt-level = 3

#openssl = { version = "0.10", features = ["vendored"] }


#[dependencies.openssl-sys]
#version = "0.9.101"
#features = ["vendored"]

[profile.release]
codegen-units=1
lto = true
opt-level = 1
# Only enable for debugging performance with heap dumps of remote cluster,
# Bloats the binary size a lot
#debug = true

# Potentially useful libraries / debug tools
#web3 = { version = "0.18.0", default-features = false, features = ["http-rustls-tls"] }

#[dependencies.simdeez]
#version = "1.0"  # Use the latest version available
#default-features = false
#features = ["simdeez_f"]  # scalar for no SIMD, you can also use "sse2", "sse41", "avx2", "avx", "neon"

#cleora = "1.2.3"
#graphembed =  {version = "0.0.7", features = ["default"]}
#annembed = "0.0.10"

#libp2p = "0.44.0"
#bitcoin = {version = "0.29.1", features = ["serde", "bitcoinconsensus"]}

#default-args = "1.0.0"
#crossbeam-channel = "0.5.1"
#filepath = "0.1.2"
#svg = "0.10.0"
#noise = "0.7.0"
#bs58 = "0.4.0"
#error-chain = "0.12.4"
#swagger = "2.2" # breaks openssl?



[target.'cfg(not(all(target_arch = "wasm32", target_os = "unknown")))'.dependencies]
redgold-data = {workspace = true}
redgold-keys = {workspace = true}
redgold-executor = {workspace = true}
aws-config = "1.1.8" #Dependencies for email sending
aws-sdk-sesv2 = "0.28.0" #Dependencies for email sending
dns-lookup = "2.0.2" #Dependencies for email sending
