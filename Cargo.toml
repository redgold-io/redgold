[package]
name = "redgold"
version = "0.1.6"
edition = "2021"
authors = ["Redgold"]
description = "A relative proof conflict resolution & irreversibility service with trust modeling custodial pooling and executor contracts"
documentation = "https://dev.docs.redgold.io/"
readme = "README.md"
homepage = "https://redgold.io"
repository = "https://github.com/redgold-io/redgold"
license = "MIT"
keywords = ["crypto", "cryptocurrency", "reputation", "decentralized", "p2p"]
categories = ["cryptography::cryptocurrencies"]


[workspace]
members = [
#    "app",
#    "core",
    "data",
    "schema",
    "sdk",
    "executor",
    "keys",
    "sdk-client"
]
exclude = ["examples/experiments/rust_wasm"] #, "sdk", "sdk/*"]


[workspace.package]
version = "0.1.5"
edition = "2021"
authors = ["Redgold"]
description = "A relative proof conflict resolution & irreversibility service with trust modeling custodial pooling and executor contracts"
documentation = "https://dev.docs.redgold.io/"
readme = "README.md"
homepage = "https://redgold.io"
repository = "https://github.com/redgold-io/redgold"
license = "MIT"
keywords = ["crypto", "cryptocurrency", "reputation", "decentralized", "p2p"]
categories = ["cryptography::cryptocurrencies"]


[workspace.dependencies]
redgold-schema = { path = "schema", version = "0.1.6"}
redgold-data = { path = "data", version = "0.1.6"}
redgold-keys = { path = "keys", version = "0.1.6"}
redgold-executor = { path = "executor", version = "0.1.6"}
redgold-sdk-client = { path = "sdk-client", version = "0.1.6"}
hex = "0.4.3"
serde = { version = "1.0.130", features = ["default", "derive"] }
serde_json = "1.0.59"
serde_with = { version = "3.2.0", features = ["hex"] }
itertools = "0.11.0"
sha3 = "0.10.8"
log = "0.4.14"
reqwest = { version = "0.11", features = ["json"] }
metrics = "0.21.1"
strum = "0.25"
strum_macros = "0.25"


[dependencies]

redgold-schema = {workspace = true}
[target.'cfg(not(all(target_arch = "wasm32", target_os = "unknown")))'.dependencies]
redgold-data = {workspace = true}
redgold-keys = {workspace = true}
redgold-executor = {workspace = true}
redgold-sdk-client = {workspace = true}

sha3 = { workspace = true }
log = { workspace = true }
hex = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }
metrics = { workspace = true }
itertools = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }


tokio = { version = "1.0.0", features = ["io-util", "io-std", "macros", "rt", "rt-multi-thread", "full"] }
tokio-util = { version = "0.7.8", features = ["default", "net", "codec"] }
tokio-stream = "0.1.14"
async-trait = "0.1.56"
futures = "0.3.1"

flume = { version = "0.10.12", features = ["futures-core", "futures-sink", "default"] }
crossbeam = "0.8.1"

warp = {version = "0.3", features = ["tls", "default"]}
dashmap = "5.5.0"

tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
csv = "1.1"
rpassword = "7.2.0"
metrics-exporter-prometheus = "0.9.0"
tempfile = "3.3.0"
argon2 = "0.5.0"
dirs = "5.0.1"
dotenv = "0.15.0"


rand = '0.8.4'
uuid = { version = "1.3.3", features = ["serde", "v4", "v1"] }

# GUI Alone
eframe = "0.21.0" # Gives us egui, epi and web+native backends
egui_extras = {version = "0.21.0", features = ["default", "image"]}
image = { version = "0.24.6", default-features = false, features = ["jpeg", "png"] }

clap = { version = "3.1.17", features = ["derive"] }

#void = "1.0.2"
# Is this used anymore?
#structopt = "0.3.21"

base64 = "0.21.2"
ssh2 = "0.9.1"
# Move to trust module
ndarray = "0.15.3"
chrono = "0.4.19"
config = "0.11.0"

bytes = "1.1.0"



#Dependencies for email sending
aws-config = "0.55.1"
aws-sdk-sesv2 = "0.28.0"
dns-lookup = "2.0.2"

#Dependencies for multiparty threshold ecdsa
multi-party-ecdsa = "0.8.1"
anyhow = "1"
round-based = { version = "0.1.4", features = [] }
async-sse = "5"
rocket = { version = "0.5.0-rc.1", default-features = false, features = ["json"] }
thiserror = "1.0.23"
surf = "2"
curv-kzen = { version = "0.9", default-features = false }



# TODO: This needs to be replaced
bitcoin-wallet = "1.1.0"
# Used for Sha256 but can be deprecated
rust-crypto = "0.2.36"
# only used in schema?

[dependencies.bitcoin]
version = "0.21"
features = ["serde", "bitcoinconsensus"]

[profile.dev.package.sqlx-macros]
opt-level = 3

[dependencies.openssl-sys]
version = "0.9.88"
features = ["vendored"]


[profile.release]
codegen-units=1
lto = true
opt-level = 1
# Only enable for debugging performance with heap dumps of remote cluster,
# Bloats the binary size a lot
#debug = true

# Potentially useful libraries / debug tools
#web3 = { version = "0.18.0", default-features = false, features = ["http-rustls-tls"] }

#[dependencies.simdeez]
#version = "1.0"  # Use the latest version available
#default-features = false
#features = ["simdeez_f"]  # scalar for no SIMD, you can also use "sse2", "sse41", "avx2", "avx", "neon"

#cleora = "1.2.3"
#graphembed =  {version = "0.0.7", features = ["default"]}
#annembed = "0.0.10"

#libp2p = "0.44.0"
#bitcoin = {version = "0.29.1", features = ["serde", "bitcoinconsensus"]}

#default-args = "1.0.0"
#crossbeam-channel = "0.5.1"
#filepath = "0.1.2"
#svg = "0.10.0"
#noise = "0.7.0"
#bs58 = "0.4.0"
#error-chain = "0.12.4"
#btc-transaction-utils = "0.9.0" # build conflict, out of date anyways
# todo: add rust-bitcoin here. https://github.com/rust-bitcoin/rust-bitcoin not necessary til after cli
#swagger = "2.2" # breaks openssl?
#hdpath = { version = "0.5.0", features = ["with-bitcoin"] }

#zxcvbn = '2.1.1'
